%macro powsign(ALPHA,N,EPS1,EPS2,P0A);
data; ALPHA= &ALPHA; N= &N; EPS1= &EPS1; EPS2= &EPS2; P0A= &P0A;
P1= exp(-EPS1)/(1+exp(-EPS1));  P2= exp(EPS2)/(1+exp(EPS2));
POWNONRD=0; POW= ALPHA*P0A**N;
keep ALPHA N EPS1 EPS2 P0A POWNONRD POW;
do M=1 to N;
    K=int(M/2); if 2*K <M or P2 ^=1-P1 then go to S00;
    P1K= probbnml(P1,M,K)-probbnml(P1,M,K-1);
    if P1K >= ALPHA then go to S7;
S00:PMI=(P1+P2)/2; K1=max(int(M*P1),1); K2=max(int(M*PMI)-2,K1-1);
    IT=0;
S0: FBINP1C1=probbnml(P1,M,K1-1); ALPHA1=0;
    FBINP2C1=probbnml(P2,M,K1-1); ALPHA2=0;
    do while (max(ALPHA1,ALPHA2) <= ALPHA);
    ALPHA1=probbnml(P1,M,K2) - FBINP1C1;
    ALPHA2=probbnml(P2,M,K2) - FBINP2C1; K2=K2+1;
    end;   K2=K2-2; if K2<K1 then go to S2;
    K1=K1+1; INCL=0; INCR=1;
S1: ALPHA1=probbnml(P1,M,K2) - probbnml(P1,M,K1-1);
    ALPHA2=probbnml(P2,M,K2) - probbnml(P2,M,K1-1);
    DELALPH1=ALPHA - ALPHA1 ;
    DELALPH2=ALPHA - ALPHA2 ;
    B11=probbnml(P1,M,K1-1) - probbnml(P1,M,max(K1-2,0))*sign(1+sign(K1-2));
    B12=probbnml(P1,M,K2+1) - probbnml(P1,M,K2);
    B21=probbnml(P2,M,K1-1) - probbnml(P2,M,max(K1-2,0))*sign(1+sign(K1-2));
    B22=probbnml(P2,M,K2+1) - probbnml(P2,M,K2);

    GAM1 = (B22*DELALPH1 - B12*DELALPH2)/(B11*B22 - B12*B21);
    GAM2 = (B11*DELALPH2 - B21*DELALPH1)/(B11*B22 - B12*B21);
    if (min(GAM1,GAM2)<0 or max(GAM1,GAM2)>=1) and INCL=0 and INCR=1 then go to S3;
    if (min(GAM1,GAM2)<0 or max(GAM1,GAM2)>=1) and INCL=1 and INCR=0 then go to S4;
    if (min(GAM1,GAM2)<0 or max(GAM1,GAM2)>=1) and INCL=1 and INCR=1 then go to S5;
    else go to S6;
S2: INCL=1; INCR=1; go to S1;
S3: K1=K1-1; K2=K2-1; INCL=1; INCR=0; go to S1;
S4: K2=K2+1; INCL=1; INCR=1; go to S1;
S5: K1=K1+1; go to S0;
S6: C1 = K1-1 ; C2=K2+1;
    FBIEHC1 = probbnml(.50,M,C1)  ;
    B01 = FBIEHC1 -probbnml(.50,M,max(C1-1,0))*sign(1+sign(C1-1));
    FBIEHK2 = probbnml(.50,M,K2) ; B02 = probbnml(.50,M,C2) -FBIEHK2;
    POWNRDCM = FBIEHK2 - FBIEHC1;
    POWCM = GAM1*B01 + POWNRDCM + GAM2*B02;
    if C1=C2 then POWCM=POWCM/2;
    go to S9;
S7: C1=K; C2=K; GAM1=ALPHA/P1K; GAM2=GAM1;
    POWNRDCM=0;
    PROB0OFK=probbnml(.5,M,K)-probbnml(.5,M,K-1);
    POWCM=GAM1*PROB0OFK;
S9: PROBOFM=probbnml(P0A,N,N-M)-probbnml(P0A,N,max(0,N-M-1))*sign(1+sign(N-M-1));
    POWNONRD=POWNONRD+POWNRDCM*PROBOFM;
    POW=POW+POWCM*PROBOFM;
    end;

proc print noobs;
format POWNONRD POW E15.; run;
%mend powsign;

%powsign(.06580,50,.847298,.847298,.26)
