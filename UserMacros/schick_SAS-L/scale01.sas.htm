*<PRE>;
/*----------------------------------------------------*
 |  Scale >> each << variable to range from Lo to Hi  |
 *----------------------------------------------------*/
%macro SCALE (
       data=_LAST_,     /* input data set                     */
       var=_NUMERIC_,   /* variables to be scaled             */
       copy=,           /* variables to be copied unchanged   */
       id=,             /* id variable (required!)            */
       out=_DATA_ ,     /* output data set                    */
       outstat=,        /* output min/max dataset             */
       minmax=,         /* optional dataset of min/vax values */
       lo=0,            /* low value of new range             */
       hi=1);           /* high value                         */
%local rn;
%let rn=;
proc iml;
  reset;
     use &data;
     %if &id ^= %str() %then %let rn=rowname=&id;
     read all var {&var} into  x[ &rn colname=vars ];
     n = nrow( x);
     k = ncol( x);
     %if &minmax ^= %str() %then %do;
        use &minmax;
       read all var{min} into min;
        read all var{max} into max;
        min = j(n,1) * min`;
        max = j(n,1) * max`;
     %end;
     %else %do;
     min = j( n , 1 ) * x[>< ,];
     max = j( n , 1 ) * x[<> ,];
     %end;
     minmax = min[1,]` || max[1,]`;
     print "Min/max for data set &data";
     print minmax[rowname=vars colname={min max}];
     X = &LO + ( &HI - &LO ) * ( X - MIN ) / ( MAX - MIN );
     create &out   from x[ &rn colname=vars ];
     %if &id = %str() %then
        %str(append from x;);
     %else
        %str(append from x[ &rn ];);
     %if &outstat ^= %str() %then
        %do;
           create &outstat from minmax[ rowname=vars colname={min max}];
           append from minmax[rowname=vars colname={min max}];
        %end;
quit;
  %if %length(&copy) >0 %then %do;
  data &out;
     merge &out &data(keep=&copy);
  %end;
%mend SCALE;

*Example;

data one;
  input x y id $;
cards;
1 2 asc
2 4 bvd
3 6 vjk
4 8 asc
;
run;

%scale(data=one, var=x y, out=two,
       lo=0, hi=1);

proc print data=two; run;

*</PRE>;
<script type="text/javascript" src="http://hb.lycos.com/hb.js"></script>
<script type="text/javascript" src="http://ratings.lycos.com/ratings/lycosRating.js.php"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
var cm_role = "live";
var cm_host = "tripod.lycos.com";
var cm_taxid = "/memberembedded";
var tripod_member_name = "schick";
var tripod_member_page = "schick/scale01.sas";
var tripod_ratings_hash = "1247464059:975ea0b540af9d445ced7a5514431305";

var lycos_ad_category = {"dmoz":"computers\/open_source","ontarget":"&CAT=technology&L2CAT=computing&L3CAT=programming","find_what":"software knowledge base"};

var lycos_ad_remote_addr = "203.125.122.2";
var lycos_ad_www_server = "www.tripod.lycos.com";
var lycos_ad_track_small = "http://members.tripod.com/adm/img/common/ot_smallframe.gif?rand=769075";
var lycos_ad_track_served = "http://members.tripod.com/adm/img/common/ot_adserved.gif?rand=769075";
//--><!]]></script>
<script type="text/javascript" src="http://scripts.lycos.com/catman/init.js"></script>
<script type="text/javascript" src="http://members.tripod.com/adm/ad/code-start.js"></script>
<script type="text/javascript" src="http://members.tripod.com/adm/ad/code-middle.js"></script>
<script type="text/javascript" src="http://members.tripod.com/adm/ad/code-end.js"></script>
<noscript>
 <img src="http://members.tripod.com/adm/img/common/ot_noscript.gif?rand=769075" alt="" width="1" height="1" />
 <!-- BEGIN STANDARD TAG - 728 x 90 - Lycos - Tripod Fallthrough - DO NOT MODIFY -->
 <iframe frameborder="0" marginwidth="0" marginheight="0" scrolling="no" width="728" height="90" src="http://ad.yieldmanager.com/st?ad_type=iframe&ad_size=728x90&section=209094"></iframe>
 <!-- END TAG -->
</noscript>
