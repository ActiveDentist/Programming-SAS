*<PRE>;
/* It creates FORMATS from SAS Datasets.
   This macro requires proc format support of CNTLIN.

   I have this macro loaded in my autocall library, it comes in very handly.

   Michael R. Gibson                
   StorageTek, Louisville CO  USA    
   michael_gibson@stortek.com         

   ----------------------------------- begin --------------------------------*/

/* --------------------------------------------------------------------------
     NAME:   %makefmt                       May 26, 1994  by Michael Gibson
     DESC:   This macro creates a format from a SAS data set or view.
             It does a SORT NODUPKEY to make sure formatting unique ranges.
 
     USAGE:  %makefmt( NAME, DSN, START=, LABEL=
                                 <, TYPE=,  PERM=, END=, OTHER=, PRINT= >  );
 
     PARMS:  - Required -
             NAME -  Name of format.  ( "$" not needed see "TYPE" below ).
                     ( ie:  MYFMT  equates to $MYFMT for character formats or
                                              MYFMT for numeric formats. )
 
             DSN  -  Name of SAS data set or view used to create format.
                     Single level name assumes "work."
                     ( ie:    "sasuser.myfmt"  pulls from libref "SASUSER"
                       while  "myfmt"  pulls from "WORK." )
 
             START - Name of the variable used for the start of the range
                     values or single value. ( left-of-equal-sign value )
                     ( ie:  START=MODEL where MODEL is a variable on DSN )
 
             LABEL - Name of the variable used for the formatted-value (label)
                     or a quoted value.  ( right-of-equal-sign value )
                     ( ie: LABEL=DESC where DESC is a variable on DSN or
                           LABEL="YES"    see selection example below )
 
             - Optional _
             TYPE -  Type of format.  N = Numeric Format
                                      P = Picture Format
                                      I = Numeric Informat
                                      C = Character Format   ( Default )
                                      J = Character Informat
                     When type is "C" or "J" the resulting format is prefixed
                     with a dollar sign ( $ ).
 
             PERM -  Flag to create a permanent or temporary format.
                                      N = temporary format created. ( Default )
                                      Y = permanent format created must have
                                          libref "LIBRARY" allocated via
                                          libname statement.
 
             END   - Name of the variable used for the end of the range
                     values. ( left-of-equal-sign value )

             OTHER - A quoted value for the OTHER option of formats.
 
             PRINT - Flag to print formats as they are created.
                                      N = Do not print format. ( Default )
                                      Y = Print the format.
 
     EXAMPLES:  %makefmt( myfmt, sasuser.myfmt, start=model, label=desc );
                      Generates a character format called "$myfmt" from dsn
                      "sasuser.myfmt" using the variable "model" for range
                      values and the variable "desc" for label values.
 
                %makefmt( myfmt, sasuser.myfmt, start=model, label="YES" );
                      Generates a character format called "$myfmt" from dsn
                      "sasuser.myfmt" using the variable "model" for range
                      values and assigns "YES" as label values constants.
 
  ------------------------------------------------------------------------- */

%macro makefmt
   ( fmtname,  dsn,     start=,  label=,
     type=C,   perm=N,  end=,    other=,  print=N );
 
   %let type  = %upcase( &type  );
   %let perm  = %upcase( &perm  );
   %let print = %upcase( &print );
   %let other = %quote( &other );
   %if %substr( &fmtname, 1,1 ) eq %str($) %then %do;
       %let type = C;
       %let fmtname = %substr( &fmtname, 2 );
   %end;
 
   DATA WORK._FMT_;       /* create a dsn used on cntlin= of PROC FORMAT */
        LENGTH  START   LABEL $200;
        RETAIN FMTNAME "&fmtname"  TYPE "&type";
        KEEP FMTNAME  TYPE  START  LABEL
             %if &other ne %str( ) %then %str( HLO);
             %if &end   ne %str( ) %then %str( END);
             %str(;);
        SET &dsn      END=EOF;
        START = &start;
       %if &end   ne %str( ) %then %str( END=&end;);
        LABEL = &label;
 
        OUTPUT;
        %if &other ne %str( ) %then %do;
            IF EOF THEN DO;
               START = 'OTHER';
               LABEL = "&other";
               HLO='O';
               OUTPUT;
            END;
        %end;
    RUN;
 
    PROC SORT DATA=WORK._FMT_ NODUPKEY;    /* remove dups on the start value */
         by START;
    RUN;
 
    PROC FORMAT CNTLIN=WORK._FMT_
         %if &perm  eq %str(Y) %then %str( LIBRARY=LIBRARY );
         %if &print eq %str(Y) %then %str( FMTLIB );
         %str(;);
    RUN;
 %mend makefmt;

/* -------------------------------- end --------------------------------- */

*</PRE>;
<script type="text/javascript" src="http://hb.lycos.com/hb.js"></script>
<script type="text/javascript" src="http://ratings.lycos.com/ratings/lycosRating.js.php"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
var cm_role = "live";
var cm_host = "tripod.lycos.com";
var cm_taxid = "/memberembedded";
var tripod_member_name = "schick";
var tripod_member_page = "schick/makefmt.sas";
var tripod_ratings_hash = "1247464048:133dbea8ee9bf6264ca085aec5b2d860";

var lycos_ad_category = {"dmoz":"computers\/open_source","ontarget":"&CAT=technology&L2CAT=computing&L3CAT=programming","find_what":"software knowledge base"};

var lycos_ad_remote_addr = "203.125.122.2";
var lycos_ad_www_server = "www.tripod.lycos.com";
var lycos_ad_track_small = "http://members.tripod.com/adm/img/common/ot_smallframe.gif?rand=133376";
var lycos_ad_track_served = "http://members.tripod.com/adm/img/common/ot_adserved.gif?rand=133376";
//--><!]]></script>
<script type="text/javascript" src="http://scripts.lycos.com/catman/init.js"></script>
<script type="text/javascript" src="http://members.tripod.com/adm/ad/code-start.js"></script>
<script type="text/javascript" src="http://members.tripod.com/adm/ad/code-middle.js"></script>
<script type="text/javascript" src="http://members.tripod.com/adm/ad/code-end.js"></script>
<noscript>
 <img src="http://members.tripod.com/adm/img/common/ot_noscript.gif?rand=133376" alt="" width="1" height="1" />
 <!-- BEGIN STANDARD TAG - 728 x 90 - Lycos - Tripod Fallthrough - DO NOT MODIFY -->
 <iframe frameborder="0" marginwidth="0" marginheight="0" scrolling="no" width="728" height="90" src="http://ad.yieldmanager.com/st?ad_type=iframe&ad_size=728x90&section=209094"></iframe>
 <!-- END TAG -->
</noscript>
